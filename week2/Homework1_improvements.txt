〇現段階では、再ハッシュをするさいにテーブルサイズが素数かどうかを判定していない (奇数にはなっている)
・素数の方がハッシュ値の衝突が減る
・素数の判定方法案
　→1. あらかじめ素数リストをプログラム内に入れて持っておく (美しくないし、データがリストの対応範囲を増えたら対応できなくなる)
　→2. エラトステネスの篩を使って素数リストを作成する (データが増えても対応はできるが、素数リストを作る分の計算量や素数リストを保存するメモリの使用量を気にしなきゃいけなくなる)
　→3. 「5以上の素数は任意の自然数xを用いて(6x+1) or (6x-1)とあらわされる」事を用いたら、求めたい数に近い素数を計算できそう。逆は必ずしも正しくない事から、近い(6x+1) or (6x-1)を計算した後にその数が素数か判定するO(√n)のステップが必要だけど、厳密に「もっとも近い素数」でなくても良いから1つ見つければよいので、この中では一番時間計算量と空間計算量が良さそう
　　→3-補足: 今の実装だとテーブルサイズは2倍/0.5倍のどちらかにしかならない。もしデータ量がある程度の範囲に収まる事が決まっているなら、一度この方法で計算した素数を配列に保存しておき、2倍なら今参照している素数の1つ右、みたいにすればさらに計算量が抑えられる。データ量が予測できないならただメモリを食うだけになるので、事前の予測が大事そう。